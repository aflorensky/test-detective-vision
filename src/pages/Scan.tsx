
import { useState, useRef } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { Camera, Upload, ArrowLeft } from "lucide-react";
import { useNavigate } from "react-router-dom";
import { toast } from "@/hooks/use-toast";

const Scan = () => {
  const navigate = useNavigate();
  const fileInputRef = useRef<HTMLInputElement>(null);
  const [isLoading, setIsLoading] = useState(false);
  const [failedAttempts, setFailedAttempts] = useState(0);

  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0];
    if (file) {
      simulateScan(file);
    }
  };

  const handleCameraCapture = () => {
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã –¥–æ—Å—Ç—É–ø –∫ –∫–∞–º–µ—Ä–µ
    toast({
      title: "–ö–∞–º–µ—Ä–∞",
      description: "–û—Ç–∫—Ä–æ–π—Ç–µ –∫–∞–º–µ—Ä—É –¥–ª—è —Å—ä—ë–º–∫–∏ —Ç–µ—Å—Ç–∞",
    });
    // –°–∏–º—É–ª—è—Ü–∏—è –∑–∞—Ö–≤–∞—Ç–∞ —Å –∫–∞–º–µ—Ä—ã
    const mockFile = new File([''], 'camera-capture.jpg', { type: 'image/jpeg' });
    simulateScan(mockFile);
  };

  const simulateScan = (file: File) => {
    setIsLoading(true);
    
    // –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    setTimeout(() => {
      setIsLoading(false);
      // –°–ª—É—á–∞–π–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
      const success = Math.random() > 0.3; // 70% —É—Å–ø–µ—Ö–∞
      
      if (success) {
        navigate('/result/success', { state: { file } });
      } else {
        const newFailedAttempts = failedAttempts + 1;
        setFailedAttempts(newFailedAttempts);
        
        if (newFailedAttempts >= 3) {
          // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ 3 –Ω–µ—É–¥–∞—á
          navigate('/scan/guide', { state: { from: 'scan', autoRedirect: true } });
        } else {
          navigate('/result/fail', { state: { attempts: newFailedAttempts } });
        }
      }
    }, 2000);
  };

  const openFileDialog = () => {
    fileInputRef.current?.click();
  };

  return (
    <div className="min-h-screen bg-gradient-to-b from-blue-50 to-white px-4 py-8">
      <div className="max-w-md mx-auto">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="text-center mb-8">
          <Button
            variant="ghost"
            onClick={() => navigate('/')}
            className="mb-4 text-gray-600 hover:text-gray-900"
          >
            <ArrowLeft className="w-4 h-4 mr-2" />
            –ù–∞ –≥–ª–∞–≤–Ω—É—é
          </Button>
          
          <h1 className="text-2xl font-bold text-gray-900 mb-4">
            –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ –∏–ª–∏ —Å—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É–π—Ç–µ —Ç–µ—Å—Ç
          </h1>
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
        <div className="space-y-4 mb-8">
          <Card>
            <CardContent className="p-6">
              <Button
                onClick={handleCameraCapture}
                disabled={isLoading}
                className="w-full h-16 text-lg bg-blue-600 hover:bg-blue-700"
              >
                <Camera className="w-6 h-6 mr-3" />
                üì∑ –°–¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ
              </Button>
            </CardContent>
          </Card>

          <Card>
            <CardContent className="p-6">
              <Button
                onClick={openFileDialog}
                disabled={isLoading}
                variant="outline"
                className="w-full h-16 text-lg border-2"
              >
                <Upload className="w-6 h-6 mr-3" />
                üñºÔ∏è –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ –≥–∞–ª–µ—Ä–µ–∏
              </Button>
              <input
                ref={fileInputRef}
                type="file"
                accept="image/*"
                capture="environment"
                onChange={handleFileUpload}
                className="hidden"
              />
            </CardContent>
          </Card>
        </div>

        {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è */}
        <Card className="mb-6">
          <CardContent className="p-6">
            <h3 className="font-medium text-gray-900 mb-3">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</h3>
            <p className="text-sm text-gray-600 mb-4">
              –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–æ—Ç–æ —Å–¥–µ–ª–∞–Ω–æ –ø—Ä–∏ —Ö–æ—Ä–æ—à–µ–º –æ—Å–≤–µ—â–µ–Ω–∏–∏ –∏ —Å—Ç—Ä–æ–≥–æ —Å–≤–µ—Ä—Ö—É. 
              –í–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏ –±—É–¥—É—Ç –ø–æ–∫–∞–∑–∞–Ω—ã –ø–æ—Å–ª–µ —Ä–∞—Å–ø–æ–∑–Ω–æ–≤–∞–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏.
            </p>
            <Button
              variant="link"
              onClick={() => navigate('/scan/guide', { state: { from: 'scan' } })}
              className="p-0 h-auto text-blue-600 hover:text-blue-700"
            >
              –ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä–æ–≤–∞—Ç—å ‚Üí
            </Button>
          </CardContent>
        </Card>

        {/* –°—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏ */}
        {isLoading && (
          <Card>
            <CardContent className="p-6 text-center">
              <div className="animate-spin w-8 h-8 border-4 border-blue-600 border-t-transparent rounded-full mx-auto mb-4"></div>
              <p className="text-gray-600">–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é...</p>
              <p className="text-sm text-gray-500 mt-2">–û–±—ã—á–Ω–æ —ç—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç 2-3 —Å–µ–∫—É–Ω–¥—ã</p>
            </CardContent>
          </Card>
        )}

        {/* –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –Ω–µ—É–¥–∞—á–∞—Ö */}
        {failedAttempts > 0 && !isLoading && (
          <Card className="bg-yellow-50 border-yellow-200">
            <CardContent className="p-4">
              <p className="text-sm text-yellow-800">
                –ü–æ–ø—ã—Ç–æ–∫: {failedAttempts}/3. 
                {failedAttempts === 2 && " –ü—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–π –Ω–µ—É–¥–∞—á–µ –º—ã –ø–æ–∫–∞–∂–µ–º –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é."}
              </p>
            </CardContent>
          </Card>
        )}
      </div>
    </div>
  );
};

export default Scan;
